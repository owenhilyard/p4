var searchIndex = JSON.parse('{\
"hello_world":{"doc":"","t":"FLLLLLLLLLLLLMLLLLLLLLLLLLLMMMLLLLMFDMMDLLLLLLLLLLLLDMFFFDFMLLLLLLLFDLLMFFMMLLMLLLLLLLLAMLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLOOOOOOOOOOOOO","n":["_hello_pipeline_create","add_ingress_tbl_entry","add_table_entry","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","csum","default","default","default","default","drop","drop","dst","dump","dump","dump","dump","egress","egress_apply","egress_metadata_t","ether_type","ethernet","ethernet_h","fmt","fmt","fmt","fmt","from","from","from","from","from","get_ingress_tbl_entries","get_table_entries","get_table_ids","headers_t","ingress","ingress_action_drop","ingress_action_forward","ingress_apply","ingress_metadata_t","ingress_tbl","ingress_tbl","into","into","into","into","into","isValid","is_valid","main","main_pipeline","new","new","parse","parse_finish","parse_start","port","port","process_packet","process_packet_headers","radix","remove_ingress_tbl_entry","remove_table_entry","set","setInvalid","setValid","set_invalid","set_valid","size","softnpu_provider","src","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","valid","valid_header_size","valid_header_size","valid_header_size","vzip","vzip","vzip","vzip","vzip","action","control_apply","control_table_hit","control_table_miss","egress_accepted","egress_dropped","egress_table_hit","egress_table_miss","ingress_accepted","ingress_dropped","parser_accepted","parser_dropped","parser_transition"],"q":[[0,"hello_world"],[121,"hello_world::softnpu_provider"],[134,"p4rs"],[135,"bitvec::order"],[136,"bitvec::vec"],[137,"alloc::string"],[138,"core::fmt"],[139,"core::fmt"],[140,"core::option"],[141,"core::ops::function"],[142,"alloc::sync"],[143,"p4rs::table"],[144,"anyhow"],[145,"core::result"],[146,"p4rs"],[147,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,3,3,3,9,10,11,12,3,9,10,11,12,12,9,10,11,12,9,10,11,12,9,9,10,11,12,11,12,9,9,10,11,12,3,0,0,9,10,0,9,10,11,12,3,9,10,11,12,3,3,3,0,3,0,0,0,0,0,3,3,9,10,11,12,9,9,0,0,3,9,3,0,0,11,12,3,3,3,3,3,9,9,9,9,9,9,0,9,9,10,11,12,9,10,11,12,3,9,10,11,12,3,9,10,11,12,3,9,10,11,12,9,10,11,12,3,9,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[1,2],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,4,[6,[5]],[6,[5]],7],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[9,9],[10,10],[11,11],[12,12],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[9,[[14,[5,13]]]],[[],9],[[],10],[[],11],[[],12],0,0,0,[9,15],[10,15],[11,15],[12,15],0,[[10,11,12],8],0,0,0,0,[[9,16],17],[[10,16],17],[[11,16],17],[[12,16],17],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,[[19,[18]]]],[[3,4],[[20,[[19,[18]]]]]],[3,[[19,[4]]]],0,0,[[10,11,12],8],[[10,11,12,[14,[5,13]]],8],[[10,11,12,[23,[[22,[21]]]]],8],0,[[],[[23,[[22,[21]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[9,24],[9,24],[[],[[26,[8,25]]]],0,[1,3],[[],9],0,[[27,10,11],24],[[27,10,11],24],0,0,[[3,1,27],[[19,[[8,[28,1]]]]]],[[3,1,27],[[19,[[8,[10,1]]]]]],0,[[3,[6,[5]]],8],[[3,4,[6,[5]]],8],[[9,[6,[5]]],[[26,[8,29]]]],[9,8],[9,8],[9,8],[9,8],[[],30],0,0,[9,[[14,[5,13]]]],[10,[[14,[5,13]]]],[11,[[14,[5,13]]]],[12,[[14,[5,13]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,[[26,[-2]]],[],[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],[-1,31,[]],0,[10,30],[11,30],[12,30],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[15,"u16"],[8,"Pipeline",134],[3,"main_pipeline",0],[15,"str"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"tuple"],[3,"ethernet_h",0],[3,"headers_t",0],[3,"ingress_metadata_t",0],[3,"egress_metadata_t",0],[3,"Msb0",135],[3,"BitVec",136],[3,"String",137],[3,"Formatter",138],[6,"Result",138],[3,"TableEntry",134],[3,"Vec",139],[4,"Option",140],[8,"Fn",141],[3,"Arc",142],[3,"Table",143],[15,"bool"],[3,"Error",144],[4,"Result",145],[3,"packet_in",134],[3,"packet_out",134],[3,"TryFromSliceError",146],[15,"usize"],[3,"TypeId",147]],"b":[]},\
"p4":{"doc":"","t":"AAAAAAAADDNNDNDNNENNNNNNNDNNDDNDNDNENENDNNNNDNEDNNDNNDNDNNNDNNNNNDENNNNNNDNNNENNIIDNNDDDNDNNNNDNDNNDNNEDNDNDNNDNNENEDNNENDNIINNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMMLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMLLLLLLLLMMMLLLMLMMMMMLLLLMLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLMMMLMLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLMMMMMMMMMMLLLLMLLLLMMMLLLLLLLLLMLLLLLLLLMMMMLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMLLLLMMLLLLMDDNDDNDDNEDDNFLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLENNDDNDDMMLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLDDLLLLLMMLLLMLLMLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENDNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNDNNNNNLLLLLLLLLLLMMLLMLLLLLLLLLLLLMMMLLMLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDLLLLLLMLLLLMLLMFLLLLLLF","n":["ast","check","error","hlir","lexer","parser","preprocessor","util","AST","Action","Action","Action","ActionParameter","ActionParameter","ActionRef","Add","Assignment","BinOp","Binary","Bit","BitAnd","BitLit","BitOr","Bool","BoolLit","Call","Call","Call","ConstTableEntry","Constant","Constant","Control","ControlMember","ControlParameter","ControlTable","DeclarationInfo","Default","Direction","DontCare","ElseIfBlock","Empty","Eq","Error","Exact","Expression","Expression","ExpressionKind","Extern","Extern","ExternFunction","ExternMethod","Geq","Gt","Header","Header","HeaderMember","HeaderMember","HeaderMethod","If","IfBlock","In","InOut","Index","Int","IntegerLit","KeySetElement","KeySetElementValue","Leq","List","List","Local","LongestPrefixMatch","Lt","Lvalue","Lvalue","Mask","Masked","MatchKind","Method","Mod","MutVisitor","MutVisitorMut","NameInfo","NotEq","Out","Package","PackageInstance","PackageParameter","Parameter","Parser","Range","Ranged","Reference","Return","Select","Select","SelectElement","SignedLit","Slice","State","State","State","Statement","StatementBlock","String","Struct","Struct","StructMember","StructMember","Subtract","Table","Table","Ternary","Transition","Transition","Type","Typedef","Unspecified","UserDefined","UserDefinedType","Varbit","Variable","Variable","Visitor","VisitorMut","Void","Xor","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","accept_mut","action","action","action","action","action","action_parameter","action_parameter","action_parameter","action_parameter","action_ref","action_ref","action_ref","action_ref","actions","actions","apply","args","binop","binop","binop","binop","block","block","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","const_entries","const_table_entry","const_table_entry","const_table_entry","const_table_entry","constant","constant","constant","constant","constants","constants","control","control","control","control","control_parameter","control_parameter","control_parameter","control_parameter","controls","decl","decl_only","default","default","default","default_action","degree","dir_token","direction","direction","elements","else_block","else_if_block","else_if_block","else_if_block","else_if_block","else_ifs","english_verb","eq","eq","eq","eq","eq","eq","eq","expression","expression","expression","expression","extern_method","extern_method","extern_method","extern_method","externs","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_action","get_control","get_extern","get_header","get_method","get_parameter","get_parser","get_start_state","get_struct","get_table","get_user_defined_type","hash","hash","header","header","header","header","header_member","header_member","header_member","header_member","headers","if_block","if_block","if_block","if_block","initializer","initializer","instance_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_type_parameter","is_type_parameter","key","key_set_element","key_set_element","key_set_element","key_set_element","key_set_element_value","key_set_element_value","key_set_element_value","key_set_element_value","keyset","keyset","kind","leaf","lval","lvalue","lvalue","lvalue","lvalue","match_kind","match_kind","match_kind","match_kind","members","members","methods","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","mut_accept_mut","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name_token","name_token","names","names","names","names","names","names","new","new","new","new","new","new","new","new","new","new","new","new","p4extern","p4extern","p4extern","p4extern","p4struct","p4struct","p4struct","p4struct","package","package","package","package","package_instance","package_instance","package_instance","package_instance","package_instance","package_parameter","package_parameter","package_parameter","package_parameter","packages","parameters","parameters","parameters","parameters","parameters","parameters","parameters","parameters","parameters","parser","parser","parser","parser","parsers","partial_cmp","parts","pop_left","pop_right","predicate","predicate","return_type","root","select","select","select","select","select_element","select_element","select_element","select_element","size","state","state","state","state","statement","statement","statement","statement","statement_block","statements","statements","states","struct_member","struct_member","struct_member","struct_member","structs","table","table","table","table","tables","tables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","token","token","token","token","token","token","token","token","token","token","token","transition","transition","transition","transition","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ty","ty","ty","ty","ty","ty","ty","ty","ty_token","ty_token","typ","typ","typ","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_parameters","type_parameters","type_parameters","type_parameters","type_parameters","typedef","typedef","typedef","typedef","typedefs","value","variable","variable","variable","variable","variables","ApplyCallChecker","ControlChecker","Deprecation","Diagnostic","Diagnostics","Error","ExpressionTypeChecker","HeaderChecker","Info","Level","ParserChecker","StructChecker","Warning","all","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","check","check","check","check","check_actions","check_apply","check_apply_ctl_apply","check_apply_table_apply","check_constant","check_control","check_expression","check_params","check_parser","check_statement_block","check_table","check_table_action_reference","check_tables","check_variables","clone","clone","clone_into","clone_into","default","ensure_transition","eq","errors","extend","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","level","lvalues","message","new","push","run","start_state","to_owned","to_owned","token","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Error","Lexer","Parser","ParserError","PreprocessorError","Semantic","SemanticError","TokenError","at","at","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","col","file","file","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","len","line","line","message","message","message","source","source","source","source","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Hlir","HlirGenerator","borrow","borrow","borrow_mut","borrow_mut","default","diags","expression_types","fmt","from","from","hlir","into","into","lvalue_decls","new","run","try_from","try_from","try_into","try_into","type_id","type_id","Action","Actions","And","AngleClose","AngleOpen","Apply","Backslash","Bang","Bit","BitLiteral","Bool","Carat","Colon","Comma","Const","Control","CurlyClose","CurlyOpen","DefaultAction","Dot","DoubleEquals","Else","Entries","Eof","Equals","Error","Exact","Extern","FalseLiteral","Forwardslash","GreaterThanEquals","Header","Identifier","If","In","InOut","Int","IntLiteral","Key","Kind","LessThanEquals","Lexer","LogicalAnd","Lpm","Mask","Minus","Mod","NotEquals","Out","Package","ParenClose","ParenOpen","Parser","Pipe","Plus","PoundDefine","PoundInclude","Range","Return","Select","Semicolon","Shl","SignedLiteral","Size","SquareClose","SquareOpen","State","String","StringLiteral","Struct","Table","Ternary","Tilde","Token","Transition","TrueLiteral","Typedef","Underscore","Varbit","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_end_of_line","clone","clone","clone_into","clone_into","col","col","eq","eq","file","fmt","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","kind","line","line","new","next","show_tokens","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","ActionParser","ControlParser","ExpressionParser","GlobalParser","IfElseParser","Parser","ParserParser","SelectParser","StateParser","StatementParser","TableParser","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","from","from","from","from","from","from","from","from","from","from","from","handle_const_decl","handle_control","handle_extern","handle_header_decl","handle_package","handle_package_instance","handle_parser","handle_struct_decl","handle_token","handle_typedef","into","into","into","into","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new","new","new","new","next_token","parse_action","parse_actionref","parse_actions","parse_apply","parse_assignment","parse_body","parse_body","parse_body","parse_body","parse_body","parse_call","parse_constant","parse_default_action","parse_direction","parse_entries","parse_entry","parse_expr_parameters","parse_expression","parse_key","parse_keyset","parse_match_kind","parse_package_parameters","parse_parameterized_call","parse_parameters","parse_parameters","parse_parameters","parse_sized_variable","parse_state","parse_statement_block","parse_table","parse_transition","parse_type_parameters","parse_variable","run","run","run","run","run","run","run","run","run","run","run","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PreprocessorElements","PreprocessorResult","borrow","borrow","borrow_mut","borrow_mut","default","default","elements","fmt","fmt","from","from","includes","into","into","lines","run","try_from","try_from","try_into","try_into","type_id","type_id","resolve_lvalue"],"q":[[0,"p4"],[8,"p4::ast"],[1017,"p4::check"],[1135,"p4::error"],[1211,"p4::hlir"],[1235,"p4::lexer"],[1361,"p4::parser"],[1515,"p4::preprocessor"],[1539,"p4::util"],[1540,"core::cmp"],[1541,"core::fmt"],[1542,"core::fmt"],[1543,"core::hash"],[1544,"alloc::string"],[1545,"std::collections::hash::map"],[1546,"alloc::boxed"],[1547,"alloc::vec"],[1548,"core::result"],[1549,"core::any"],[1550,"alloc::sync"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","A function or method calleturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturn all the tables in this control block, recursively …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The first token of this parser, used for error reportingeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Level of this diagnostic.","Check lvalue references","Message associated with this diagnostic.","","","","Ensure the parser has a start state","","","The first token from the lexical element where the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Token where the error was encountered","Token where the error was encountered","","","","","","","","","","","Column where the token error was encountered.","The soruce file where the token error was encountered.","The soruce file where the token error was encountered.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Length of the erronious token.","Line where the token error was encountered.","Token where the error was encountered","Message associated with this error.","Message associated with this error.","Message associated with this error.","The source line the token error occured on.","The source line the token error occured on.","The source line the token error occured on.","The source line the token error occured on.","","","","","","","","","","","","","","","","","","","","","The P4 high level intermediate representation (hlir) is a …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","A bit literal. The following a literal examples and their …","","","","","","","","","","","","","","End of file.","","","","","","","","","","","","","","An integer literal. The following are literal examples and …","","","","","","","","","","","","","","","","","","","","","","","","","A signed literal. The following a literal examples and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Column number of the first character in this token.","","","The file this token came from.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The kind of token this is.","","Line number of this token.","","","","","","","","","","","","","","","","","","Parser for parsing control definitions","","Top level parser for parsing elements are global scope.","","This is a recurisve descent parser for the P4 language.","Parser for parsing parser definitions","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,7,43,0,43,0,12,28,0,39,7,12,39,12,7,39,0,39,28,0,0,28,0,43,0,43,0,25,0,25,0,28,12,7,27,0,25,0,0,52,7,0,12,12,0,52,0,43,7,28,0,40,40,39,7,39,0,0,12,7,39,43,27,12,0,39,12,25,0,43,12,0,0,0,12,40,0,0,0,43,0,27,25,33,28,0,33,0,39,39,0,7,43,0,0,7,0,52,0,43,12,0,7,27,0,28,0,0,40,7,0,7,0,28,0,0,7,12,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,3,38,54,55,23,3,38,54,55,3,38,54,55,17,22,17,31,3,38,54,55,29,30,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,3,38,54,55,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,42,22,3,38,54,55,3,38,54,55,1,17,3,38,54,55,3,38,54,55,1,44,18,1,41,34,22,42,19,19,21,34,29,3,38,54,55,29,12,7,11,12,17,40,42,43,3,38,54,55,3,38,54,55,1,1,4,5,6,7,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,17,1,1,1,36,17,1,18,1,17,1,11,42,3,38,54,55,3,38,54,55,1,3,38,54,55,9,10,4,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,17,18,22,3,38,54,55,3,38,54,55,23,35,11,42,31,3,38,54,55,3,38,54,55,13,15,36,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,1,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,26,42,32,35,36,37,19,21,13,15,17,18,20,36,4,5,6,11,13,15,17,18,20,22,26,32,3,38,54,55,3,38,54,55,3,38,54,55,3,38,54,55,1,3,38,54,55,1,4,5,10,17,18,20,26,34,37,3,38,54,55,1,42,42,42,42,29,30,37,42,3,38,54,55,3,38,54,55,22,3,38,54,55,3,38,54,55,20,41,32,18,3,38,54,55,1,3,38,54,55,17,17,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,7,10,11,14,16,18,22,24,26,42,32,36,3,38,54,55,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,8,9,10,14,16,19,21,44,19,21,3,38,54,55,52,1,4,5,6,7,8,9,10,11,39,12,13,14,15,16,17,18,19,40,41,20,21,22,23,24,25,26,27,28,29,30,31,42,32,33,34,35,36,37,43,44,6,5,6,17,18,37,3,38,54,55,1,24,3,38,54,55,17,0,0,68,0,0,68,0,0,68,0,0,0,68,0,91,65,92,93,94,66,67,68,64,91,65,92,93,94,66,67,68,64,65,91,92,93,94,91,91,65,65,66,66,66,91,66,66,91,91,91,91,67,68,67,68,64,92,68,64,64,67,68,64,91,65,92,93,94,66,67,68,64,91,65,92,93,94,66,67,68,64,67,92,67,64,64,66,92,67,68,67,91,65,92,93,94,66,67,68,64,91,65,92,93,94,66,67,68,64,91,65,92,93,94,66,67,68,64,0,72,72,0,0,72,0,0,69,70,69,70,71,72,73,69,70,71,72,73,71,71,73,69,69,70,70,71,71,72,72,73,73,69,70,71,72,72,72,72,73,69,70,71,72,73,71,71,73,69,70,73,69,70,71,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,69,70,71,72,73,0,0,74,63,74,63,63,74,63,63,74,63,74,74,63,63,74,74,74,63,74,63,74,63,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,76,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,76,76,76,76,76,75,76,58,75,76,58,75,76,58,76,58,75,58,76,58,58,76,76,58,58,75,76,58,76,58,75,76,58,58,75,58,75,75,75,76,58,76,58,75,76,58,75,76,58,75,76,58,0,0,0,0,0,0,0,0,0,0,0,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,78,78,78,78,78,78,78,78,78,78,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,79,80,82,82,80,83,80,82,86,87,88,83,79,82,79,82,82,79,79,82,79,82,78,83,79,81,86,81,86,79,80,79,79,79,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,79,78,80,81,82,83,84,85,86,87,88,0,0,89,90,89,90,89,90,89,89,90,89,90,90,89,90,89,0,89,90,89,90,89,90,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,-1],2,3],[[4,-1],2,3],[[5,-1],2,3],[[6,-1],2,3],[[7,-1],2,3],[[8,-1],2,3],[[9,-1],2,3],[[10,-1],2,3],[[11,-1],2,3],[[12,-1],2,3],[[13,-1],2,3],[[14,-1],2,3],[[15,-1],2,3],[[16,-1],2,3],[[17,-1],2,3],[[18,-1],2,3],[[19,-1],2,3],[[20,-1],2,3],[[21,-1],2,3],[[22,-1],2,3],[[23,-1],2,3],[[24,-1],2,3],[[25,-1],2,3],[[26,-1],2,3],[[27,-1],2,3],[[28,-1],2,3],[[29,-1],2,3],[[30,-1],2,3],[[31,-1],2,3],[[32,-1],2,3],[[33,-1],2,3],[[34,-1],2,3],[[35,-1],2,3],[[36,-1],2,3],[[37,-1],2,3],[[1,-1],2,38],[[4,-1],2,38],[[5,-1],2,38],[[6,-1],2,38],[[7,-1],2,38],[[8,-1],2,38],[[9,-1],2,38],[[10,-1],2,38],[[11,-1],2,38],[[12,-1],2,38],[[13,-1],2,38],[[14,-1],2,38],[[15,-1],2,38],[[16,-1],2,38],[[17,-1],2,38],[[18,-1],2,38],[[19,-1],2,38],[[20,-1],2,38],[[21,-1],2,38],[[22,-1],2,38],[[23,-1],2,38],[[24,-1],2,38],[[25,-1],2,38],[[26,-1],2,38],[[27,-1],2,38],[[28,-1],2,38],[[29,-1],2,38],[[30,-1],2,38],[[31,-1],2,38],[[32,-1],2,38],[[33,-1],2,38],[[34,-1],2,38],[[35,-1],2,38],[[36,-1],2,38],[[37,-1],2,38],[[-1,20],2,[]],[[-1,20],2,[]],[[-1,20],2,[]],[[-1,20],2,[]],0,[[-1,21],2,[]],[[-1,21],2,[]],[[-1,21],2,[]],[[-1,21],2,[]],[[-1,26],2,[]],[[-1,26],2,[]],[[-1,26],2,[]],[[-1,26],2,[]],0,0,0,0,[[-1,12],2,[]],[[-1,12],2,[]],[[-1,12],2,[]],[[-1,12],2,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,31],2,[]],[[-1,31],2,[]],[[-1,31],2,[]],[[-1,31],2,[]],[7,7],[8,8],[9,9],[10,10],[11,11],[39,39],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[40,40],[41,41],[20,20],[21,21],[22,22],[23,23],[24,24],[25,25],[26,26],[27,27],[28,28],[29,29],[30,30],[31,31],[42,42],[32,32],[33,33],[34,34],[35,35],[36,36],[37,37],[43,43],[44,44],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[42,42],45],0,[[-1,23],2,[]],[[-1,23],2,[]],[[-1,23],2,[]],[[-1,23],2,[]],[[-1,9],2,[]],[[-1,9],2,[]],[[-1,9],2,[]],[[-1,9],2,[]],0,0,[[-1,17],2,[]],[[-1,17],2,[]],[[-1,17],2,[]],[[-1,17],2,[]],[[-1,19],2,[]],[[-1,19],2,[]],[[-1,19],2,[]],[[-1,19],2,[]],0,0,0,[[],1],[[],41],[[],34],0,[42,46],0,0,0,0,0,[[-1,30],2,[]],[[-1,30],2,[]],[[-1,30],2,[]],[[-1,30],2,[]],0,[12,47],[[7,7],48],[[11,11],48],[[12,12],48],[[17,17],48],[[40,40],48],[[42,42],48],[[43,43],48],[[-1,11],2,[]],[[-1,11],2,[]],[[-1,11],2,[]],[[-1,11],2,[]],[[-1,37],2,[]],[[-1,37],2,[]],[[-1,37],2,[]],[[-1,37],2,[]],0,[[1,49],50],[[4,49],50],[[5,49],50],[[6,49],50],[[7,49],50],[[7,49],50],[[8,49],50],[[9,49],50],[[10,49],50],[[11,49],50],[[39,49],50],[[12,49],50],[[13,49],50],[[14,49],50],[[15,49],50],[[16,49],50],[[17,49],50],[[18,49],50],[[19,49],50],[[40,49],50],[[41,49],50],[[20,49],50],[[21,49],50],[[22,49],50],[[23,49],50],[[24,49],50],[[25,49],50],[[26,49],50],[[27,49],50],[[28,49],50],[[29,49],50],[[30,49],50],[[31,49],50],[[42,49],50],[[32,49],50],[[33,49],50],[[34,49],50],[[35,49],50],[[36,49],50],[[37,49],50],[[43,49],50],[[44,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[17,47],[[51,[20]]]],[[1,47],[[51,[17]]]],[[1,47],[[51,[36]]]],[[1,47],[[51,[13]]]],[[36,47],[[51,[37]]]],[[17,47],[[51,[19]]]],[[1,47],[[51,[18]]]],[18,[[51,[32]]]],[[1,47],[[51,[15]]]],[[17,47],[[51,[22]]]],[[1,47],[[51,[52]]]],[[11,-1],2,53],[[42,-1],2,53],[[-1,13],2,[]],[[-1,13],2,[]],[[-1,13],2,[]],[[-1,13],2,[]],[[-1,14],2,[]],[[-1,14],2,[]],[[-1,14],2,[]],[[-1,14],2,[]],0,[[-1,29],2,[]],[[-1,29],2,[]],[[-1,29],2,[]],[[-1,29],2,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[17,47],48],[[18,47],48],0,[[-1,24],2,[]],[[-1,24],2,[]],[[-1,24],2,[]],[[-1,24],2,[]],[[-1,25],2,[]],[[-1,25],2,[]],[[-1,25],2,[]],[[-1,25],2,[]],0,0,0,[42,47],0,[[-1,42],2,[]],[[-1,42],2,[]],[[-1,42],2,[]],[[-1,42],2,[]],[[-1,27],2,[]],[[-1,27],2,[]],[[-1,27],2,[]],[[-1,27],2,[]],0,0,0,[[1,-1],2,54],[[4,-1],2,54],[[5,-1],2,54],[[6,-1],2,54],[[7,-1],2,54],[[8,-1],2,54],[[9,-1],2,54],[[10,-1],2,54],[[11,-1],2,54],[[12,-1],2,54],[[13,-1],2,54],[[14,-1],2,54],[[15,-1],2,54],[[16,-1],2,54],[[17,-1],2,54],[[18,-1],2,54],[[19,-1],2,54],[[20,-1],2,54],[[21,-1],2,54],[[22,-1],2,54],[[23,-1],2,54],[[24,-1],2,54],[[25,-1],2,54],[[26,-1],2,54],[[27,-1],2,54],[[28,-1],2,54],[[29,-1],2,54],[[30,-1],2,54],[[31,-1],2,54],[[32,-1],2,54],[[33,-1],2,54],[[34,-1],2,54],[[35,-1],2,54],[[36,-1],2,54],[[37,-1],2,54],[[1,-1],2,55],[[4,-1],2,55],[[5,-1],2,55],[[6,-1],2,55],[[7,-1],2,55],[[8,-1],2,55],[[9,-1],2,55],[[10,-1],2,55],[[11,-1],2,55],[[12,-1],2,55],[[13,-1],2,55],[[14,-1],2,55],[[15,-1],2,55],[[16,-1],2,55],[[17,-1],2,55],[[18,-1],2,55],[[19,-1],2,55],[[20,-1],2,55],[[21,-1],2,55],[[22,-1],2,55],[[23,-1],2,55],[[24,-1],2,55],[[25,-1],2,55],[[26,-1],2,55],[[27,-1],2,55],[[28,-1],2,55],[[29,-1],2,55],[[30,-1],2,55],[[31,-1],2,55],[[32,-1],2,55],[[33,-1],2,55],[[34,-1],2,55],[[35,-1],2,55],[[36,-1],2,55],[[37,-1],2,55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[13,[[57,[56,44]]]],[15,[[57,[56,44]]]],[17,[[57,[56,44]]]],[18,[[57,[56,44]]]],[20,[[57,[56,44]]]],[36,[[57,[56,44]]]],[56,4],[56,5],[56,6],[[58,39],[[59,[11]]]],[56,13],[56,15],[56,17],[[56,58],18],[56,20],[[56,58],22],[[56,58],26],[[56,58],32],[[-1,36],2,[]],[[-1,36],2,[]],[[-1,36],2,[]],[[-1,36],2,[]],[[-1,15],2,[]],[[-1,15],2,[]],[[-1,15],2,[]],[[-1,15],2,[]],[[-1,5],2,[]],[[-1,5],2,[]],[[-1,5],2,[]],[[-1,5],2,[]],[[-1,4],2,[]],[[-1,4],2,[]],[[-1,4],2,[]],[[-1,4],2,[]],0,[[-1,6],2,[]],[[-1,6],2,[]],[[-1,6],2,[]],[[-1,6],2,[]],0,0,0,0,0,0,0,0,0,0,[[-1,18],2,[]],[[-1,18],2,[]],[[-1,18],2,[]],[[-1,18],2,[]],0,[[42,42],[[51,[45]]]],[42,[[60,[47]]]],[42,42],[42,42],0,0,0,[42,47],[[-1,34],2,[]],[[-1,34],2,[]],[[-1,34],2,[]],[[-1,34],2,[]],[[-1,35],2,[]],[[-1,35],2,[]],[[-1,35],2,[]],[[-1,35],2,[]],0,[[-1,32],2,[]],[[-1,32],2,[]],[[-1,32],2,[]],[[-1,32],2,[]],[[-1,28],2,[]],[[-1,28],2,[]],[[-1,28],2,[]],[[-1,28],2,[]],0,0,0,0,[[-1,16],2,[]],[[-1,16],2,[]],[[-1,16],2,[]],[[-1,16],2,[]],0,[[-1,22],2,[]],[[-1,22],2,[]],[[-1,22],2,[]],[[-1,22],2,[]],[[17,1],[[60,[[2,[[60,[[2,[56,17]]]],22]]]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,56,[]],0,0,0,0,0,0,0,0,0,0,0,[[-1,33],2,[]],[[-1,33],2,[]],[[-1,33],2,[]],[[-1,33],2,[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],0,0,0,0,0,0,0,0,0,0,[[-1,7],2,[]],[[-1,7],2,[]],[[-1,7],2,[]],[[-1,7],2,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,0,0,0,0,[[-1,8],2,[]],[[-1,8],2,[]],[[-1,8],2,[]],[[-1,8],2,[]],0,0,[[-1,10],2,[]],[[-1,10],2,[]],[[-1,10],2,[]],[[-1,10],2,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[63,64]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,31],2],[[17,1,63],64],[[18,1],64],[[15,1],64],[[13,1],64],[[17,1,63,64],2],[[17,1,63,64],2],[[65,31,17],2],[[65,31,22],2],[[66,46],64],[[66,46],64],[[66,11,[57,[56,44]]],64],[[17,1,64],2],[[66,46],64],[[66,41,[57,[56,44]]],64],[[17,22,[57,[56,44]],1,64],2],[[17,22,1,64],2],[[17,[57,[56,44]],1,64],2],[[17,1,64],2],[67,67],[68,68],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],64],[[32,64],2],[[68,68],48],[64,[[60,[67]]]],[[64,64],2],[[67,49],50],[[68,49],50],[[64,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[18,1,64],2],0,[[],64],[[64,67],2],[66,[[2,[[57,[11,7]],64]]]],[[18,64],2],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[69,49],50],[[69,49],50],[[70,49],50],[[70,49],50],[[71,49],50],[[71,49],50],[[72,49],50],[[72,49],50],[[73,49],50],[[73,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[70,72],[71,72],[[[60,[69]]],72],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,56,[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],63],0,0,[[63,49],50],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[1,74],[74,2],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,48],[76,76],[58,58],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],0,0,[[76,76],48],[[58,58],48],0,[[76,49],50],[[76,49],50],[[58,49],50],[[58,49],50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[76,-1],2,53],[[58,-1],2,53],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[[60,[47]],[77,[56]]],75],[75,[[61,[58,71]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,56,[]],[-1,56,[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[78,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[[78,56,1],[[61,[2,72]]]],[[78,1,58],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[[78,58,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[75,79],[79,78],[79,80],[79,81],[79,82],[79,83],[79,84],[79,85],[[79,58],86],[79,87],[79,88],[79,[[61,[58,72]]]],[[80,17],[[61,[2,72]]]],[82,[[61,[26,72]]]],[[82,22],[[61,[2,72]]]],[[80,17],[[61,[2,72]]]],[[83,42],[[61,[28,72]]]],[[80,17],[[61,[2,72]]]],[[82,22],[[61,[2,72]]]],[[86,18],[[61,[2,72]]]],[[87,32],[[61,[2,72]]]],[[88,34],[[61,[2,72]]]],[[83,42],[[61,[28,72]]]],[79,[[61,[9,72]]]],[[82,22],[[61,[2,72]]]],[79,[[61,[[2,[40,58]],72]]]],[[82,22],[[61,[2,72]]]],[82,[[61,[23,72]]]],[79,[[61,[[60,[[59,[11]]]],72]]]],[79,[[61,[[59,[11]],72]]]],[[82,22],[[61,[2,72]]]],[79,[[61,[[60,[24]],72]]]],[82,[[61,[27,72]]]],[[78,5],[[61,[2,72]]]],[[83,42],[[61,[28,72]]]],[79,[[61,[[60,[19]],72]]]],[[81,20],[[61,[2,72]]]],[[86,18],[[61,[2,72]]]],[[81,7],[[61,[10,72]]]],[[86,18],[[61,[2,72]]]],[79,[[61,[41,72]]]],[[80,17],[[61,[2,72]]]],[79,[[61,[33,72]]]],[79,[[61,[[60,[56]],72]]]],[79,[[61,[10,72]]]],[[79,1],[[61,[2,72]]]],[[78,1],[[61,[2,72]]]],[80,[[61,[17,72]]]],[81,[[61,[20,72]]]],[82,[[61,[22,72]]]],[83,[[61,[28,72]]]],[84,[[61,[28,72]]]],[85,[[61,[[59,[11]],72]]]],[86,[[61,[18,72]]]],[87,[[61,[32,72]]]],[88,[[61,[34,72]]]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],[-1,62,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],89],[[],90],0,[[89,49],50],[[90,49],50],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[47,[77,[56]]],[[61,[89,73]]]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,[[61,[-2]]],[],[]],[-1,62,[]],[-1,62,[]],[[42,1,[57,[56,44]]],[[61,[44,56]]]]],"c":[],"p":[[3,"AST",8],[15,"tuple"],[8,"Visitor",8],[3,"PackageInstance",8],[3,"Package",8],[3,"PackageParameter",8],[4,"Type",8],[3,"Typedef",8],[3,"Constant",8],[3,"Variable",8],[3,"Expression",8],[4,"BinOp",8],[3,"Header",8],[3,"HeaderMember",8],[3,"Struct",8],[3,"StructMember",8],[3,"Control",8],[3,"Parser",8],[3,"ControlParameter",8],[3,"Action",8],[3,"ActionParameter",8],[3,"Table",8],[3,"ConstTableEntry",8],[3,"KeySetElement",8],[4,"KeySetElementValue",8],[3,"ActionRef",8],[4,"MatchKind",8],[4,"Statement",8],[3,"IfBlock",8],[3,"ElseIfBlock",8],[3,"Call",8],[3,"State",8],[4,"Transition",8],[3,"Select",8],[3,"SelectElement",8],[3,"Extern",8],[3,"ExternMethod",8],[8,"VisitorMut",8],[4,"ExpressionKind",8],[4,"Direction",8],[3,"StatementBlock",8],[3,"Lvalue",8],[4,"DeclarationInfo",8],[3,"NameInfo",8],[4,"Ordering",1540],[15,"usize"],[15,"str"],[15,"bool"],[3,"Formatter",1541],[6,"Result",1541],[4,"Option",1542],[4,"UserDefinedType",8],[8,"Hasher",1543],[8,"MutVisitor",8],[8,"MutVisitorMut",8],[3,"String",1544],[3,"HashMap",1545],[3,"Token",1235],[3,"Box",1546],[3,"Vec",1547],[4,"Result",1548],[3,"TypeId",1549],[3,"Hlir",1211],[3,"Diagnostics",1017],[3,"ApplyCallChecker",1017],[3,"ExpressionTypeChecker",1017],[3,"Diagnostic",1017],[4,"Level",1017],[3,"SemanticError",1135],[3,"ParserError",1135],[3,"TokenError",1135],[4,"Error",1135],[3,"PreprocessorError",1135],[3,"HlirGenerator",1211],[3,"Lexer",1235],[4,"Kind",1235],[3,"Arc",1550],[3,"GlobalParser",1361],[3,"Parser",1361],[3,"ControlParser",1361],[3,"ActionParser",1361],[3,"TableParser",1361],[3,"StatementParser",1361],[3,"IfElseParser",1361],[3,"ExpressionParser",1361],[3,"ParserParser",1361],[3,"StateParser",1361],[3,"SelectParser",1361],[3,"PreprocessorResult",1515],[3,"PreprocessorElements",1515],[3,"ControlChecker",1017],[3,"ParserChecker",1017],[3,"StructChecker",1017],[3,"HeaderChecker",1017]],"b":[[441,"impl-Display-for-Type"],[442,"impl-Debug-for-Type"],[1158,"impl-Debug-for-SemanticError"],[1159,"impl-Display-for-SemanticError"],[1160,"impl-Display-for-ParserError"],[1161,"impl-Debug-for-ParserError"],[1162,"impl-Display-for-TokenError"],[1163,"impl-Debug-for-TokenError"],[1164,"impl-Display-for-Error"],[1165,"impl-Debug-for-Error"],[1166,"impl-Debug-for-PreprocessorError"],[1167,"impl-Display-for-PreprocessorError"],[1172,"impl-From%3CParserError%3E-for-Error"],[1173,"impl-From%3CTokenError%3E-for-Error"],[1174,"impl-From%3CVec%3CSemanticError%3E%3E-for-Error"],[1330,"impl-Debug-for-Kind"],[1331,"impl-Display-for-Kind"],[1332,"impl-Display-for-Token"],[1333,"impl-Debug-for-Token"]]},\
"p4_macro":{"doc":"The <code>use_p4!</code> macro allows for P4 programs to be directly …","t":"O","n":["use_p4"],"q":[[0,"p4_macro"]],"d":["The <code>use_p4!</code> macro uses the <code>x4c</code> compiler to generate Rust …"],"i":[0],"f":[0],"c":[],"p":[],"b":[]},\
"p4_macro_test":{"doc":"","t":"LLLLLLLLLLLMLLMMDLLLLDLLLLFLFLLLLLLAMLLLLLLLLLLMLOOOOOOOOOOOOO","n":["borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","csum","default","default","dst_addr","dump","dump","ether_type","ethernet","ethernet_t","fmt","fmt","from","from","headers_t","into","into","isValid","is_valid","main","new","parsadillo_start","set","setInvalid","setValid","set_invalid","set_valid","size","softnpu_provider","src_addr","to_bitvec","to_bitvec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","valid","valid_header_size","action","control_apply","control_table_hit","control_table_miss","egress_accepted","egress_dropped","egress_table_hit","egress_table_miss","ingress_accepted","ingress_dropped","parser_accepted","parser_dropped","parser_transition"],"q":[[0,"p4_macro_test"],[49,"p4_macro_test::softnpu_provider"],[62,"bitvec::order"],[63,"bitvec::vec"],[64,"alloc::string"],[65,"core::fmt"],[66,"core::fmt"],[67,"p4rs::error"],[68,"core::result"],[69,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,2,1,2,1,2,2,1,2,2,1,2,2,1,0,1,2,1,2,0,1,2,2,2,0,2,0,2,2,2,2,2,2,0,2,1,2,1,2,1,2,1,2,1,2,2,1,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[1,1],[2,2],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[2,[[6,[4,5]]]],[[],1],[[],2],0,[1,7],[2,7],0,0,0,[[1,8],9],[[2,8],9],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,10],[2,10],[[],3],[[],2],[[11,1],10],[[2,[12,[4]]],[[14,[3,13]]]],[2,3],[2,3],[2,3],[2,3],[[],15],0,0,[1,[[6,[4,5]]]],[2,[[6,[4,5]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,[[14,[-2]]],[],[]],[-1,16,[]],[-1,16,[]],0,[1,15],0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[3,"headers_t",0],[3,"ethernet_t",0],[15,"tuple"],[15,"u8"],[3,"Msb0",62],[3,"BitVec",63],[3,"String",64],[3,"Formatter",65],[6,"Result",65],[15,"bool"],[3,"packet_in",66],[15,"slice"],[3,"TryFromSliceError",67],[4,"Result",68],[15,"usize"],[3,"TypeId",69]],"b":[]},\
"p4_rust":{"doc":"","t":"DDLLLLLLFFLLLLLLMFLLLLLLLL","n":["Sanitizer","Settings","action_parameter","borrow","borrow","borrow_mut","borrow_mut","control_parameter","emit","emit_tokens","from","from","header_member","into","into","lvalue","pipeline_name","sanitize","sanitize_string","struct_member","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"p4_rust"],[26,"p4::ast"],[27,"p4::ast"],[28,"std::io::error"],[29,"proc_macro2"],[30,"p4::ast"],[31,"p4::ast"],[32,"core::any"]],"d":["","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Name to give to the C-ABI constructor.","","","","","","","","",""],"i":[0,0,1,8,1,8,1,1,0,0,8,1,1,8,1,1,8,0,1,1,8,1,8,1,8,1],"f":[0,0,[[1,2],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,4],3],[[5,6,7,8],[[9,[3]]]],[[5,6,8],10],[-1,-1,[]],[-1,-1,[]],[[1,11],3],[-1,-2,[],[]],[-1,-2,[],[]],[[1,12],3],0,[5,3],[13,3],[[1,14],3],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,[[15,[-2]]],[],[]],[-1,16,[]],[-1,16,[]]],"c":[],"p":[[3,"Sanitizer",0],[3,"ActionParameter",26],[15,"tuple"],[3,"ControlParameter",26],[3,"AST",26],[3,"Hlir",27],[15,"str"],[3,"Settings",0],[6,"Result",28],[3,"TokenStream",29],[3,"HeaderMember",26],[3,"Lvalue",26],[3,"String",30],[3,"StructMember",26],[4,"Result",31],[3,"TypeId",32]],"b":[]},\
"p4rs":{"doc":"This is the runtime support create for <code>x4c</code> generated …","t":"DDIIDCMKAFFFLLLLLLLLLLAMLFLAALFFFFLFFLLLLLLLLLLKKLMMFLLLLLKMKLLDDMMKKLKKKKAKLLLLLLLLLLLLLLLFFFFFIDLLLLLLKLLLLLLLFDLLLLLLLLLLDLLLLLLLLLLDNNENNDNDDENNMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMFFMLMLMMFLLLLFFLLLLLLLLLLLLLLLLLLLLLLLLMM","n":["AlignedU128","Bit","Header","Pipeline","TableEntry","TryFromSliceError","action_id","add_table_entry","bitmath","bitvec_to_biguint","bitvec_to_bitvec16","bitvec_to_ip6addr","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","data","deserialize","dump_bv","eq","error","externs","extract","extract_bit_action_parameter","extract_bool_action_parameter","extract_exact_key","extract_lpm_key","extract_new","extract_range_key","extract_ternary_key","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_table_entries","get_table_ids","hash","header_data","index","int_to_bitvec","into","into","into","into","into","is_valid","keyset_data","new","new","new","packet_in","packet_out","parameter_data","payload_data","process_packet","remove_table_entry","serialize","set","set_invalid","set_valid","size","table","to_bitvec","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","add_be","add_generic","add_le","mod_be","mod_le","Checksum","Csum","add","add128","add16","add32","borrow","borrow_mut","csum","default","from","into","result","try_from","try_into","type_id","udp6_checksum","TryFromSliceError","borrow","borrow_mut","fmt","fmt","from","into","to_string","try_from","try_into","type_id","Checksum","borrow","borrow_mut","default","from","into","new","run","try_from","try_into","type_id","BigUintKey","DontCare","Exact","Key","Lpm","Masked","Prefix","Range","Table","TableEntry","Ternary","Ternary","Value","action","action_id","addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","deserialize","deserialize","deserialize","deserialize","dump","entries","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","into","into","into","into","into","into","key","key_matches","keyset_matches","len","match_selector","name","new","parameter_data","priority","prune_entries_by_lpm","serialize","serialize","serialize","serialize","sort_entries","sort_entries_by_priority","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","width"],"q":[[0,"p4rs"],[91,"p4rs::bitmath"],[96,"p4rs::checksum"],[113,"p4rs::error"],[124,"p4rs::externs"],[135,"p4rs::table"],[251,"bitvec::order"],[252,"bitvec::vec"],[253,"core::net::ip_addr"],[254,"core::result"],[255,"serde::de"],[256,"alloc::string"],[257,"core::fmt"],[258,"core::fmt"],[259,"core::option"],[260,"core::hash"],[261,"serde::ser"],[262,"core::any"],[263,"core::clone"],[264,"num_bigint::biguint"]],"d":["","","A fixed length header trait.","","","","","Add an entry to a table identified by table_id.","","","","","","","","","","","","","","","","The underlying data. Owned by an external, memory-mapped …","","","","","","","","","","","","","Extract a ternary key from the provided keyset data. …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get all the entries in a table.","Get a list of table ids","","","Extraction index. Everything before <code>index</code> has been …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Every packet that goes through a P4 pipeline is …","","","","Process an input packet and produce a set of output …","Remove an entry from a table identified by table_id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,10,41,0,0,0,0,42,14,16,23,10,42,14,16,23,10,0,16,10,0,14,0,0,16,0,0,0,0,16,0,0,14,14,16,23,10,42,14,16,23,10,41,41,14,23,16,0,42,14,16,23,10,17,10,17,14,16,0,0,10,23,41,41,10,17,17,17,17,0,17,42,14,16,23,10,42,14,16,23,10,42,14,16,23,10,0,0,0,0,0,0,0,31,31,31,31,31,31,34,31,31,31,31,31,31,31,0,0,20,20,20,20,20,20,20,20,20,20,0,33,33,33,33,33,33,33,33,33,33,0,35,19,0,19,35,0,19,0,0,0,19,35,37,37,36,39,8,19,35,36,37,39,8,19,35,36,37,8,19,35,36,37,8,19,35,36,37,39,19,35,8,19,35,36,39,39,8,19,35,36,37,8,19,35,36,37,39,8,19,35,36,37,8,19,35,36,37,39,8,19,35,36,37,37,0,0,36,39,37,39,37,37,0,8,19,35,36,0,0,19,8,19,35,36,37,39,8,19,35,36,37,39,8,19,35,36,37,39,8,19,35,36,37,8,8],"f":[0,0,0,0,0,0,0,[[-1,1,1,[3,[2]],[3,[2]],4],5,[]],0,[[[7,[2,6]]],8],[[[7,[2,6]]],[[7,[2,6]]]],[[[7,[2,6]]],9],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[11,[10]]],12],[[[7,[2,6]]],13],[[14,14],15],0,0,[[16,-1],5,17],[[[3,[2]],18,18],[[7,[2,6]]]],[[[3,[2]],18],15],[[[3,[2]],18,18],19],[[[3,[2]],18,18],19],[16,[[11,[-1,20]]],17],[[[3,[2]],18,18],19],[[[3,[2]],18,18],19],[[14,21],22],[[14,21],22],[[16,21],22],[[23,21],22],[[10,21],22],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,1],[[25,[[24,[10]]]]],[]],[-1,[[24,[1]]],[]],[[14,-1],5,26],0,0,[27,[[7,[2,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,15,[]],0,[[],-1,[]],[[[3,[2]]],[[11,[14,20]]]],[[[3,[2]]],16],0,0,0,0,[[-1,28,16],[[24,[[5,[23,28]]]]],[]],[[-1,1,[3,[2]]],5,[]],[[10,-1],11,29],[[-1,[3,[2]]],[[11,[5,20]]],[]],[-1,5,[]],[-1,5,[]],[[],18],0,[-1,[[7,[2,6]]],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[[[7,[2,6]],[7,[2,6]]],[[7,[2,6]]]],[[[7,[2,6]],[7,[2,6]]],[[7,[2,6]]]],[[[7,[2,6]],[7,[2,6]]],[[7,[2,6]]]],[[[7,[2,6]],[7,[2,6]]],[[7,[2,6]]]],[[[7,[2,6]],[7,[2,6]]],[[7,[2,6]]]],0,0,[[31,2,2],5],[[31,[32,[2]]],5],[[31,[32,[2]]],5],[[31,[32,[2]]],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[7,[2,6]]],[]],[[],31],[-1,-1,[]],[-1,-2,[],[]],[31,28],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],[[[3,[2]]],28],0,[-1,-2,[],[]],[-1,-2,[],[]],[[20,21],22],[[20,21],22],[-1,-1,[]],[-1,-2,[],[]],[-1,13,[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],33],[-1,-1,[]],[-1,-2,[],[]],[[],33],[[33,[3,[34]]],[[7,[2,6]]]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[8,8],[19,19],[35,35],[36,36],[[[37,[-1]]],[[37,[-1]]],[38,38]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],[[39,[-1]]],38],[[],19],[[],35],[-1,[[11,[8]]],12],[-1,[[11,[19]]],12],[-1,[[11,[35]]],12],[-1,[[11,[36]]],12],[[[39,[-1]]],13,38],0,[[8,8],15],[[19,19],15],[[35,35],15],[[36,36],15],[[[37,[-1]],[37,[-1]]],15,38],[[8,21],22],[[19,21],22],[[35,21],22],[[36,21],22],[[[37,[-1]],21],22,38],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[8,-1],5,26],[[19,-1],5,26],[[35,-1],5,26],[[36,-1],5,26],[[[37,[-1]],-2],5,38,26],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[40,19],15],[[[32,[40]],[32,[19]]],15],0,[[[39,[-1]],[32,[40]]],[[24,[[37,[-1]]]]],38],0,[[],[[39,[-1]]],38],0,0,[[18,[24,[[37,[-1]]]]],[[24,[[37,[-1]]]]],38],[[8,-1],11,29],[[19,-1],11,29],[[35,-1],11,29],[[36,-1],11,29],[[[24,[[37,[-1]]]]],[[24,[[37,[-1]]]]],38],[[[3,[[37,[-1]]]]],5,38],[19,[[24,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,[[11,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0],"c":[],"p":[[15,"str"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"tuple"],[3,"Msb0",251],[3,"BitVec",252],[3,"BigUintKey",135],[4,"IpAddr",253],[3,"TableEntry",0],[4,"Result",254],[8,"Deserializer",255],[3,"String",256],[3,"Bit",0],[15,"bool"],[3,"packet_in",0],[8,"Header",0],[15,"usize"],[4,"Key",135],[3,"TryFromSliceError",113],[3,"Formatter",257],[6,"Result",257],[3,"packet_out",0],[3,"Vec",258],[4,"Option",259],[8,"Hasher",260],[15,"i128"],[15,"u16"],[8,"Serializer",261],[3,"TypeId",262],[3,"Csum",96],[15,"array"],[3,"Checksum",124],[8,"Checksum",96],[4,"Ternary",135],[3,"Prefix",135],[3,"TableEntry",135],[8,"Clone",263],[3,"Table",135],[3,"BigUint",264],[8,"Pipeline",0],[3,"AlignedU128",0]],"b":[[37,"impl-LowerHex-for-Bit%3C\'a,+N%3E"],[38,"impl-Debug-for-Bit%3C\'a,+N%3E"],[116,"impl-Display-for-TryFromSliceError"],[117,"impl-Debug-for-TryFromSliceError"]]},\
"sidecar_lite":{"doc":"","t":"FMMLLLLLLLLLLLLLMDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMDDLLLLLLLLLLLLLLLMMMMMMMMMMFDMMDMMMLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLLLMMMDMMMMDMMMMFFMFMFMDFMFMFMFMFMFMFMFMFMMMMMMLLLLLLLLLLLLLLLLMDMDLLLLLLLLLLLLMFFFFFDMMFFLLLLLLLLLLLLLMMMMMMMFFFFFFFFFFFFFFFMMMMLMMMMFFLLLLLLLLLLLLLMMMMFFFFFFFMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMDLLLLLLLLLLLLMMMMMMMMDMLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLMDMMMMMMMMMMMMMMMMMMDMM","n":["_main_pipeline_create","ack","ack_no","add_ingress_local_local_v4_entry","add_ingress_local_local_v6_entry","add_ingress_mac_mac_rewrite_entry","add_ingress_nat_nat_icmp_v4_entry","add_ingress_nat_nat_icmp_v6_entry","add_ingress_nat_nat_v4_entry","add_ingress_nat_nat_v6_entry","add_ingress_pxarp_proxy_arp_entry","add_ingress_resolver_resolver_v4_entry","add_ingress_resolver_resolver_v6_entry","add_ingress_router_router_v4_entry","add_ingress_router_router_v6_entry","add_table_entry","arp","arp_h","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","checksum","checksum","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","crit","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","ctrl","data","data_offset","ddm","ddm0","ddm1","ddm10","ddm11","ddm12","ddm13","ddm14","ddm15","ddm2","ddm3","ddm4","ddm5","ddm6","ddm7","ddm8","ddm9","ddm_element_t","ddm_h","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dei","diffserv","drop","drop","dst","dst","dst","dst_port","dst_port","egress","egress_apply","egress_metadata_t","ether_type","ethernet","ethernet_h","flags","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","geneve","geneve_h","get_ingress_local_local_v4_entries","get_ingress_local_local_v6_entries","get_ingress_mac_mac_rewrite_entries","get_ingress_nat_nat_icmp_v4_entries","get_ingress_nat_nat_icmp_v6_entries","get_ingress_nat_nat_v4_entries","get_ingress_nat_nat_v6_entries","get_ingress_pxarp_proxy_arp_entries","get_ingress_resolver_resolver_v4_entries","get_ingress_resolver_resolver_v6_entries","get_ingress_router_router_v4_entries","get_ingress_router_router_v6_entries","get_table_entries","get_table_ids","hdr_checksum","hdr_checksum","header_length","headers_t","hop_limit","hw_addr_len","hw_type","icmp","icmp_h","id","identification","ihl","ingress","ingress_apply","ingress_local_local_v4","ingress_local_local_v4","ingress_local_local_v6","ingress_local_local_v6","ingress_mac_mac_rewrite","ingress_mac_mac_rewrite","ingress_metadata_t","ingress_nat_nat_icmp_v4","ingress_nat_nat_icmp_v4","ingress_nat_nat_icmp_v6","ingress_nat_nat_icmp_v6","ingress_nat_nat_v4","ingress_nat_nat_v4","ingress_nat_nat_v6","ingress_nat_nat_v6","ingress_pxarp_proxy_arp","ingress_pxarp_proxy_arp","ingress_resolver_resolver_v4","ingress_resolver_resolver_v4","ingress_resolver_resolver_v6","ingress_resolver_resolver_v6","ingress_router_router_v4","ingress_router_router_v4","ingress_router_router_v6","ingress_router_router_v6","inner_eth","inner_ipv4","inner_ipv6","inner_tcp","inner_udp","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ipv4","ipv4_h","ipv6","ipv6_h","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","len","local_action_local","local_action_nonlocal","local_apply","mac_rewrite_action_rewrite","mac_rewrite_apply","main_pipeline","nat","nat_id","nat_ingress_action_forward_to_sled","nat_ingress_apply","new","new","new","new","new","new","new","new","new","new","new","new","new","next_hdr","next_header","nexthop_v4","nexthop_v6","opcode","opt_len","parse","parse_arp","parse_ddm","parse_geneve","parse_icmp","parse_inner_eth","parse_inner_ipv4","parse_inner_ipv6","parse_inner_tcp","parse_inner_udp","parse_ipv4","parse_ipv6","parse_sidecar","parse_start","parse_tcp","parse_udp","payload_len","pcp","port","port","process_packet","proto_addr_len","proto_type","protocol","protocol","proxy_arp_action_proxy_arp_reply","proxy_arp_apply","remove_ingress_local_local_v4_entry","remove_ingress_local_local_v6_entry","remove_ingress_mac_mac_rewrite_entry","remove_ingress_nat_nat_icmp_v4_entry","remove_ingress_nat_nat_icmp_v6_entry","remove_ingress_nat_nat_v4_entry","remove_ingress_nat_nat_v6_entry","remove_ingress_pxarp_proxy_arp_entry","remove_ingress_resolver_resolver_v4_entry","remove_ingress_resolver_resolver_v6_entry","remove_ingress_router_router_v4_entry","remove_ingress_router_router_v6_entry","remove_table_entry","res","reserved","reserved","reserved2","resolver_action_drop","resolver_action_rewrite_dst","resolver_apply","router_action_drop","router_action_forward_v4","router_action_forward_v6","router_apply","sc_code","sc_egress","sc_ether_type","sc_ingress","sc_payload","sender_ip","sender_mac","seq_no","set","set","set","set","set","set","set","set","set","set","set","set","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","sidecar","sidecar_h","size","size","size","size","size","size","size","size","size","size","size","size","src","src","src","src_port","src_port","target_ip","target_mac","tcp","tcp_h","timestamp","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_len","traffic_class","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp","udp_h","urgent_ptr","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","version","version","version","version","vid","vlan_h","vni","window"],"q":[[0,"sidecar_lite"],[527,"p4rs"],[528,"bitvec::order"],[529,"bitvec::vec"],[530,"core::fmt"],[531,"core::fmt"],[532,"core::option"],[533,"core::ops::function"],[534,"alloc::sync"],[535,"p4rs::table"],[536,"p4rs::externs"],[537,"p4rs"],[538,"core::result"],[539,"core::any"]],"deturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,23,12,3,3,3,3,3,3,3,3,3,3,3,3,3,19,0,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,14,12,16,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,22,13,9,10,11,12,13,15,16,17,18,20,22,23,13,22,12,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,9,11,14,21,10,11,20,12,16,3,0,0,10,19,0,11,12,20,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,11,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,19,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,11,22,23,0,20,17,17,19,0,18,11,11,3,0,0,3,0,3,0,3,0,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,0,3,19,19,19,19,19,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,19,0,19,0,9,10,11,12,13,15,16,17,18,20,22,23,16,0,0,0,0,0,0,21,21,0,0,3,9,10,11,12,13,15,16,17,18,20,22,23,20,23,14,14,17,13,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,9,14,21,3,17,17,11,13,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,12,13,23,13,0,0,0,0,0,0,0,15,15,15,15,15,17,17,12,9,10,11,12,13,15,16,17,18,20,22,23,9,10,11,12,13,15,16,17,18,20,22,23,9,10,11,12,13,15,16,17,18,20,22,23,19,0,9,10,11,12,13,15,16,17,18,20,22,23,10,11,20,12,16,17,17,19,0,18,9,10,11,12,13,15,16,17,18,20,22,23,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,11,20,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,11,22,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,19,0,12,9,10,11,12,13,15,16,17,18,20,22,23,11,13,20,23,9,0,13,12],"f":[[1,2],0,0,[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,4,[6,[5]],[6,[5]],7],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,0,[9,[[25,[5,24]]]],[10,[[25,[5,24]]]],[11,[[25,[5,24]]]],[12,[[25,[5,24]]]],[13,[[25,[5,24]]]],[15,[[25,[5,24]]]],[16,[[25,[5,24]]]],[17,[[25,[5,24]]]],[18,[[25,[5,24]]]],[20,[[25,[5,24]]]],[22,[[25,[5,24]]]],[23,[[25,[5,24]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],0,0,0,0,0,0,0,0,0,0,[[19,21,14],8],0,0,0,0,0,0,0,[[9,26],27],[[10,26],27],[[11,26],27],[[12,26],27],[[13,26],27],[[14,26],27],[[15,26],27],[[16,26],27],[[17,26],27],[[18,26],27],[[19,26],27],[[20,26],27],[[21,26],27],[[22,26],27],[[23,26],27],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[3,[[29,[28]]]],[[3,4],[[30,[[29,[28]]]]]],[3,[[29,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[19,21,14,[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]]],8],[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,[[],[[33,[[32,[31]]]]]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[9,34],[10,34],[11,34],[12,34],[13,34],[15,34],[16,34],[17,34],[18,34],[20,34],[22,34],[23,34],0,[[19,34],8],[[19,34],8],[[19,34,[33,[[32,[31]]]],[33,[[32,[31]]]]],8],[[19,14,[25,[5,24]]],8],[[19,14,[33,[[32,[31]]]]],8],0,0,0,[[19,21,14,35,[25,[5,24]],[25,[5,24]],[25,[5,24]]],8],[[19,21,14,[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]],[33,[[32,[31]]]]],8],[1,3],[[],9],[[],10],[[],11],[[],12],[[],13],[[],15],[[],16],[[],17],[[],18],[[],20],[[],22],[[],23],0,0,0,0,0,0,0,[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],[[36,19,21],34],0,0,0,0,[[3,1,36],[[29,[[8,[37,1]]]]]],0,0,0,0,[[19,21,14,[25,[5,24]]],8],[[19,21,14,[33,[[32,[31]]]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,4,[6,[5]]],8],0,0,0,0,[[19,14],8],[[19,14,[25,[5,24]]],8],[[19,14,[33,[[32,[31]]]],[33,[[32,[31]]]]],8],[[19,21,14],8],[[19,21,14,[25,[5,24]],[25,[5,24]]],8],[[19,21,14,[25,[5,24]],[25,[5,24]]],8],[[19,21,14,[33,[[32,[31]]]],[33,[[32,[31]]]]],8],0,0,0,0,0,0,0,0,[[9,[6,[5]]],[[39,[8,38]]]],[[10,[6,[5]]],[[39,[8,38]]]],[[11,[6,[5]]],[[39,[8,38]]]],[[12,[6,[5]]],[[39,[8,38]]]],[[13,[6,[5]]],[[39,[8,38]]]],[[15,[6,[5]]],[[39,[8,38]]]],[[16,[6,[5]]],[[39,[8,38]]]],[[17,[6,[5]]],[[39,[8,38]]]],[[18,[6,[5]]],[[39,[8,38]]]],[[20,[6,[5]]],[[39,[8,38]]]],[[22,[6,[5]]],[[39,[8,38]]]],[[23,[6,[5]]],[[39,[8,38]]]],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[17,8],[18,8],[20,8],[22,8],[23,8],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[17,8],[18,8],[20,8],[22,8],[23,8],0,0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,0,0,0,0,0,0,0,0,0,[9,[[25,[5,24]]]],[10,[[25,[5,24]]]],[11,[[25,[5,24]]]],[12,[[25,[5,24]]]],[13,[[25,[5,24]]]],[15,[[25,[5,24]]]],[16,[[25,[5,24]]]],[17,[[25,[5,24]]]],[18,[[25,[5,24]]]],[20,[[25,[5,24]]]],[22,[[25,[5,24]]]],[23,[[25,[5,24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],[-1,[[39,[-2]]],[],[]],0,0,[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],[-1,41,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[15,"u16"],[8,"Pipeline",527],[3,"main_pipeline",0],[15,"str"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"tuple"],[3,"vlan_h",0],[3,"ethernet_h",0],[3,"ipv4_h",0],[3,"tcp_h",0],[3,"geneve_h",0],[3,"egress_metadata_t",0],[3,"sidecar_h",0],[3,"udp_h",0],[3,"arp_h",0],[3,"ddm_element_t",0],[3,"headers_t",0],[3,"ipv6_h",0],[3,"ingress_metadata_t",0],[3,"icmp_h",0],[3,"ddm_h",0],[3,"Msb0",528],[3,"BitVec",529],[3,"Formatter",530],[6,"Result",530],[3,"TableEntry",527],[3,"Vec",531],[4,"Option",532],[8,"Fn",533],[3,"Arc",534],[3,"Table",535],[15,"bool"],[3,"Checksum",536],[3,"packet_in",527],[3,"packet_out",527],[3,"TryFromSliceError",537],[4,"Result",538],[15,"usize"],[3,"TypeId",539]],"b":[]},\
"tests":{"doc":"","t":"AOOAAFFDDDDDDDDMMLLLLLLLLLLLLLLLLLLFMMMMMLLLLLLLLMMLLLLLLLLMLLLLLLLLLLMMMLMMMLLLLMMMLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLL","n":["data","expect_frames","muffins","packet","softnpu","v4","v6","InnerPhy","Interface4","Interface6","OuterPhy","OwnedFrame","RxFrame","SoftNpu","TxFrame","addr","addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","do_expect_frames","dst","dst","ethertype","ethertype","ethertype","from","from","from","from","from","from","from","from","index","index","into","into","into","into","into","into","into","into","mac","new","new","new","new","new","new","new","new","newv","newv","payload","payload","payload","phy","phy","phy","pipeline","recv","recv_buffer_len","run","rx_count","sc_egress","sc_egress","sc_egress","send","send","send","src","src","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_count","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vid","vid","vid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"tests"],[5,"tests::packet"],[7,"tests::softnpu"],[126,"core::net::ip_addr"],[127,"pnet_packet::ipv4"],[128,"core::net::ip_addr"],[129,"alloc::sync"],[130,"core::option"],[131,"p4rs"],[132,"xfr"],[133,"xfr"],[134,"xfr"],[135,"anyhow"],[136,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Create a new SoftNpu ASIC emulator. The <code>radix</code> indicates …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,17,21,10,22,23,25,12,7,17,21,10,22,23,25,12,7,7,7,0,25,7,25,12,7,17,21,10,22,23,25,12,7,21,10,17,21,10,22,23,25,12,7,10,17,21,10,22,23,25,12,7,25,12,25,12,7,17,22,23,17,10,10,17,10,22,23,25,10,22,23,12,7,7,17,21,10,22,23,25,12,7,17,21,10,22,23,25,12,7,10,17,21,10,22,23,25,12,7,25,12,7,17,21,10,22,23,25,12,7],"f":[0,0,0,0,0,[[1,1,[3,[2]],[3,[2]]],4],[[5,5,[3,[2]],[3,[2]]],6],0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[7,7],[[-1,-2],8,[],[]],[[9,[11,[10]],[3,[12]],[14,[[13,[2]]]]],8],0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[15,-1,16],[[17,[-1]]],18],[[15,19,20],21],[[15,20,19],10],[[[11,[10]],5],22],[[[11,[10]],1],23],[[[13,[2]],24,[3,[2]]],25],[[[13,[2]],24,[3,[2]]],12],[[[13,[2]],[13,[2]],24,[14,[24]],[26,[2]]],7],[[[13,[2]],24,[3,[2]],24],25],[[[13,[2]],24,[3,[2]],24],12],0,0,0,[[[17,[-1]],15],[[11,[10]]],18],0,0,0,[10,[[26,[7]]]],[10,15],[[[17,[-1]]],8,18],[10,15],0,0,0,[[10,[3,[25]]],[[28,[8,27]]]],[[22,[13,[2]],5,[3,[2]]],[[28,[8,29]]]],[[23,[13,[2]],1,[3,[2]]],[[28,[8,29]]]],0,0,[-1,-2,[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[-1,[[28,[-2]]],[],[]],[10,15],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Ipv4Addr",126],[15,"u8"],[15,"slice"],[3,"MutableIpv4Packet",127],[3,"Ipv6Addr",126],[3,"MutableIpv6Packet",128],[3,"OwnedFrame",7],[15,"tuple"],[15,"str"],[3,"OuterPhy",7],[3,"Arc",129],[3,"RxFrame",7],[15,"array"],[4,"Option",130],[15,"usize"],[15,"bool"],[3,"SoftNpu",7],[8,"Pipeline",131],[3,"RingConsumer",132],[3,"RingProducer",132],[3,"InnerPhy",7],[3,"Interface6",7],[3,"Interface4",7],[15,"u16"],[3,"TxFrame",7],[3,"Vec",133],[4,"Error",132],[4,"Result",134],[3,"Error",135],[3,"TypeId",136]],"b":[]},\
"vlan_switch":{"doc":"","t":"FMMLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLMMMDDLLLLLLLLLLLLLLLMMMMMMMMMLLLLLLLLLLLLLLLMFDMMMDMMMLLLLLLLLLLLLLLLFFFMLLLLLLLLLLLLLLLLDLLLLMMMDMMMDMMMMFFMDFMFLLLLLLLLLLLLLLLLDDLLLLLLLLLLLLLLLLLLLLLLLLMFDMMLLLLLLLLLLLLLMMMMMMMFFMMMMLLMMMMMLLLMMMMFMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLAMMMMMMMDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLDMMMMMMMMMMMMMLLLMMMMMMFFFDMLLLLLLLLLLLLLLLLMOOOOOOOOOOOOO","n":["_vlan_switch_pipeline_create","ack","ack_no","add_ingress_fwd_fib_entry","add_ingress_vlan_port_vlan_entry","add_table_entry","arp_h","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","checksum","checksum","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","code","crit","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","csum","ctrl","data","data_offset","ddm_element_t","ddm_h","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","dei","diffserv","drop","drop","dst","dst","dst","dst_port","dst_port","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","dump","egress","egress_apply","egress_metadata_t","eth","ether_type","ether_type","ethernet_h","flags","flags","flow_label","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_action_drop","forward_action_forward","forward_apply","frag_offset","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","geneve_h","get_ingress_fwd_fib_entries","get_ingress_vlan_port_vlan_entries","get_table_entries","get_table_ids","hdr_checksum","hdr_checksum","header_length","headers_t","hop_limit","hw_addr_len","hw_type","icmp_h","id","identification","ihl","ingress","ingress_apply","ingress_fwd_fib","ingress_fwd_fib","ingress_metadata_t","ingress_vlan_port_vlan","ingress_vlan_port_vlan","init_tables","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","ipv4_h","ipv6_h","isValid","isValid","isValid","isValid","isValid","isValid","isValid","isValid","isValid","isValid","isValid","isValid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","is_valid","len","main","main_pipeline","nat","nat_id","new","new","new","new","new","new","new","new","new","new","new","new","new","next_hdr","next_header","nexthop_v4","nexthop_v6","opcode","opt_len","parse","parse_start","parse_vlan","payload_len","pcp","port","port","process_packet","process_packet_headers","proto_addr_len","proto_type","protocol","protocol","radix","remove_ingress_fwd_fib_entry","remove_ingress_vlan_port_vlan_entry","remove_table_entry","res","reserved","reserved","reserved2","run_test","sc_code","sc_egress","sc_ether_type","sc_ingress","sc_payload","sender_ip","sender_mac","seq_no","set","set","set","set","set","set","set","set","set","set","set","set","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setInvalid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","setValid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_invalid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","set_valid","sidecar_h","size","size","size","size","size","size","size","size","size","size","size","size","softnpu_provider","src","src","src","src_port","src_port","target_ip","target_mac","tcp_h","timestamp","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_bitvec","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_len","traffic_class","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","ttl","typ","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udp_h","urgent_ptr","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid","valid_header_size","valid_header_size","valid_header_size","version","version","version","version","vid","vlan","vlan_action_filter","vlan_action_no_vid_for_port","vlan_apply","vlan_h","vni","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window","action","control_apply","control_table_hit","control_table_miss","egress_accepted","egress_dropped","egress_table_hit","egress_table_miss","ingress_accepted","ingress_dropped","parser_accepted","parser_dropped","parser_transition"],"q":[[0,"vlan_switch"],[505,"vlan_switch::softnpu_provider"],[518,"p4rs"],[519,"bitvec::order"],[520,"bitvec::vec"],[521,"alloc::string"],[522,"core::fmt"],[523,"core::fmt"],[524,"alloc::sync"],[525,"p4rs::table"],[526,"p4rs"],[527,"core::option"],[528,"anyhow"],[529,"core::result"],[530,"p4rs"],[531,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codei":[0,16,18,3,3,3,0,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,14,12,18,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,9,23,9,10,11,12,13,15,16,18,20,21,22,23,23,9,18,0,0,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,11,10,14,19,10,15,22,12,18,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,0,0,17,11,22,0,10,18,15,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,0,0,10,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,3,3,3,3,9,10,16,0,15,21,21,0,13,10,10,3,0,0,3,0,0,3,0,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,0,9,10,11,12,13,15,16,18,20,21,22,23,9,10,11,12,13,15,16,18,20,21,22,23,12,0,0,19,19,3,9,10,11,12,13,15,16,18,20,21,22,23,15,16,14,14,21,23,3,0,0,15,11,14,19,3,3,21,21,10,23,3,3,3,3,18,16,23,23,0,20,20,20,20,20,21,21,18,9,10,11,12,13,15,16,18,20,21,22,23,9,10,11,12,13,15,16,18,20,21,22,23,9,10,11,12,13,15,16,18,20,21,22,23,9,10,11,12,13,15,16,18,20,21,22,23,9,10,11,12,13,15,16,18,20,21,22,23,0,9,10,11,12,13,15,16,18,20,21,22,23,0,10,15,22,12,18,21,21,0,13,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,10,15,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,10,9,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,0,18,9,10,11,12,13,15,16,18,20,21,22,23,14,17,19,10,15,16,23,11,17,0,0,0,0,23,3,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,18,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[[1,2],0,0,[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,[6,[5]],[6,[5]],7],8],[[3,4,4,[6,[5]],[6,[5]],7],8],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[15,15],[16,16],[17,17],[18,18],[19,19],[20,20],[21,21],[22,22],[23,23],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],0,0,[9,[[25,[5,24]]]],[10,[[25,[5,24]]]],[11,[[25,[5,24]]]],[12,[[25,[5,24]]]],[13,[[25,[5,24]]]],[15,[[25,[5,24]]]],[16,[[25,[5,24]]]],[18,[[25,[5,24]]]],[20,[[25,[5,24]]]],[21,[[25,[5,24]]]],[22,[[25,[5,24]]]],[23,[[25,[5,24]]]],0,0,0,0,0,[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],15],[[],16],[[],17],[[],18],[[],19],[[],20],[[],21],[[],22],[[],23],0,0,0,0,0,0,0,0,0,[9,26],[10,26],[11,26],[12,26],[13,26],[14,26],[15,26],[16,26],[17,26],[18,26],[19,26],[20,26],[21,26],[22,26],[23,26],0,[[17,19,14],8],0,0,0,0,0,0,0,0,[[9,27],28],[[10,27],28],[[11,27],28],[[12,27],28],[[13,27],28],[[14,27],28],[[15,27],28],[[16,27],28],[[17,27],28],[[18,27],28],[[19,27],28],[[20,27],28],[[21,27],28],[[22,27],28],[[23,27],28],[[17,14],8],[[17,14,[25,[5,24]]],8],[[17,14,[31,[[30,[29]]]]],8],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[3,[[33,[32]]]],[3,[[33,[32]]]],[[3,4],[[34,[[33,[32]]]]]],[3,[[33,[4]]]],0,0,0,0,0,0,0,0,0,0,0,0,[[17,19,14,[31,[[30,[29]]]],[31,[[30,[29]]]]],8],[[],[[31,[[30,[29]]]]]],0,0,[[],[[31,[[30,[29]]]]]],0,[[3,[35,[5]],[35,[5]]],8],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[9,36],[10,36],[11,36],[12,36],[13,36],[15,36],[16,36],[18,36],[20,36],[21,36],[22,36],[23,36],[9,36],[10,36],[11,36],[12,36],[13,36],[15,36],[16,36],[18,36],[20,36],[21,36],[22,36],[23,36],0,[[],[[38,[8,37]]]],0,0,0,[1,3],[[],9],[[],10],[[],11],[[],12],[[],13],[[],15],[[],16],[[],18],[[],20],[[],21],[[],22],[[],23],0,0,0,0,0,0,0,[[39,17,19],36],[[39,17,19],36],0,0,0,0,[[3,1,39],[[33,[[8,[40,1]]]]]],[[3,1,39],[[33,[[8,[17,1]]]]]],0,0,0,0,0,[[3,[6,[5]]],8],[[3,[6,[5]]],8],[[3,4,[6,[5]]],8],0,0,0,0,[[3,[35,[5]],[35,[5]]],[[38,[8,37]]]],0,0,0,0,0,0,0,0,[[9,[6,[5]]],[[38,[8,41]]]],[[10,[6,[5]]],[[38,[8,41]]]],[[11,[6,[5]]],[[38,[8,41]]]],[[12,[6,[5]]],[[38,[8,41]]]],[[13,[6,[5]]],[[38,[8,41]]]],[[15,[6,[5]]],[[38,[8,41]]]],[[16,[6,[5]]],[[38,[8,41]]]],[[18,[6,[5]]],[[38,[8,41]]]],[[20,[6,[5]]],[[38,[8,41]]]],[[21,[6,[5]]],[[38,[8,41]]]],[[22,[6,[5]]],[[38,[8,41]]]],[[23,[6,[5]]],[[38,[8,41]]]],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[18,8],[20,8],[21,8],[22,8],[23,8],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[18,8],[20,8],[21,8],[22,8],[23,8],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[18,8],[20,8],[21,8],[22,8],[23,8],[9,8],[10,8],[11,8],[12,8],[13,8],[15,8],[16,8],[18,8],[20,8],[21,8],[22,8],[23,8],0,[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],[[],42],0,0,0,0,0,0,0,0,0,0,[9,[[25,[5,24]]]],[10,[[25,[5,24]]]],[11,[[25,[5,24]]]],[12,[[25,[5,24]]]],[13,[[25,[5,24]]]],[14,[[25,[5,24]]]],[15,[[25,[5,24]]]],[16,[[25,[5,24]]]],[17,[[25,[5,24]]]],[18,[[25,[5,24]]]],[19,[[25,[5,24]]]],[20,[[25,[5,24]]]],[21,[[25,[5,24]]]],[22,[[25,[5,24]]]],[23,[[25,[5,24]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],[-1,[[38,[-2]]],[],[]],0,0,[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],[-1,43,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[14,42],[17,42],[19,42],0,0,0,0,0,0,[[[25,[5,24]],[25,[5,24]],36,[25,[5,24]]],8],[[[25,[5,24]],[25,[5,24]],36],8],[[[25,[5,24]],[25,[5,24]],36,[31,[[30,[29]]]]],8],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[15,"u16"],[8,"Pipeline",518],[3,"main_pipeline",0],[15,"str"],[15,"u8"],[15,"slice"],[15,"u32"],[15,"tuple"],[3,"icmp_h",0],[3,"ipv4_h",0],[3,"vlan_h",0],[3,"udp_h",0],[3,"ddm_element_t",0],[3,"egress_metadata_t",0],[3,"ipv6_h",0],[3,"ddm_h",0],[3,"headers_t",0],[3,"tcp_h",0],[3,"ingress_metadata_t",0],[3,"sidecar_h",0],[3,"arp_h",0],[3,"ethernet_h",0],[3,"geneve_h",0],[3,"Msb0",519],[3,"BitVec",520],[3,"String",521],[3,"Formatter",522],[6,"Result",522],[8,"Fn",523],[3,"Arc",524],[3,"Table",525],[3,"TableEntry",518],[3,"Vec",526],[4,"Option",527],[15,"array"],[15,"bool"],[3,"Error",528],[4,"Result",529],[3,"packet_in",518],[3,"packet_out",518],[3,"TryFromSliceError",530],[15,"usize"],[3,"TypeId",531]],"b":[]},\
"x4c":{"doc":"","t":"NDNNELLLLLLMLLMLLLLLLLLMFMMMMMLLLLLLLLLLL","n":["Docs","Opts","RedHawk","Rust","Target","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","check","clone","clone_into","filename","from","from","from_arg_matches","from_arg_matches_mut","into","into","into_app","into_app_for_update","out","process_file","show_ast","show_hlir","show_pre","show_tokens","target","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches_mut","value_variants"],"q":[[0,"x4c"],[41,"clap::builder::command"],[42,"clap::parser::matches::arg_matches"],[43,"clap::error"],[44,"core::result"],[45,"alloc::string"],[46,"alloc::sync"],[47,"p4::ast"],[48,"anyhow"],[49,"clap::builder::possible_value"],[50,"core::option"],[51,"core::any"]],"d":["","","","","","","","","","","","Just check code, do not compile.","","","File to compile.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Filename to write generated code to.","","Show parsed abstract syntax tree.","Show high-level intermediate representation info.","Show parsed preprocessor info.","Show parsed lexical tokens.","What target to generate code for.","","","","","","","","","","",""],"i":[2,0,2,2,0,5,5,5,2,5,2,5,2,2,5,5,2,5,5,5,2,5,5,5,0,5,5,5,5,5,2,2,5,2,5,2,5,2,5,5,2],"f":[0,0,0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[[-1,-2],3,[],[]],0,[-1,-1,[]],[-1,-1,[]],[4,[[7,[5,6]]]],[4,[[7,[5,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[[],1],0,[[[9,[8]],10,5],[[11,[3]]]],0,0,0,0,0,[-1,-2,[],[]],[2,[[13,[12]]]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,14,[]],[-1,14,[]],[[5,4],[[7,[3,6]]]],[[5,4],[[7,[3,6]]]],[[],[[15,[2]]]]],"c":[],"p":[[6,"Command",41],[4,"Target",0],[15,"tuple"],[3,"ArgMatches",42],[3,"Opts",0],[3,"Error",43],[4,"Result",44],[3,"String",45],[3,"Arc",46],[3,"AST",47],[6,"Result",48],[3,"PossibleValue",49],[4,"Option",50],[3,"TypeId",51],[15,"slice"]],"b":[]},\
"x4c_error_codes":{"doc":"","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[],"b":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
